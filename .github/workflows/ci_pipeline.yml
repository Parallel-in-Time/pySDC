name: CI pipeline for pySDC

on:
  push:
  pull_request:

jobs:

  lint:
    runs-on: ubuntu-latest

    env:
      YML: 'etc/environment-lint.yml'

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Conda environment with Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ${{ env.YML }}

      - name: Code reformatting with black
        run: |
          black pySDC  --check --diff --color 

      - name: Linting with flakeheaven
        run: |
          flakeheaven lint --benchmark pySDC          


  test_base:
    runs-on: ubuntu-latest

    needs: lint

    env:
      YML: 'etc/environment.yml'

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        py: [ 3.7, 3.8, 3.9, 3.10 ]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Add packages
        run: |
          sudo apt-get update
          sudo apt-get --yes install texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra cm-super dvipng nodejs

      - name: Install Conda environment with Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ${{ env.YML }}
          extra-specs: python = ${{ matrix.py }}

      - name: Run pytest
        run: |
          pytest -v --cov=pySDC --cov-config=.coveragerc --cov-report=html --cov-report=term --durations=0 pySDC/tests -m "not fenics and not petsc and not mpifft"

      - name: Build documentation
        run: |
          chmod u+x ./docs/update_apidocs.sh
          ./docs/update_apidocs.sh
          sphinx-build -b html docs/source docs/build/html

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        if: ${{ github.event_name == 'push' && github.repository_owner == 'Parallel-in-Time' && github.ref == 'refs/heads/master' && !env.ACT }} 
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: docs/build/html # The folder the action should deploy.


  test_fenics:
    runs-on: ubuntu-latest

    needs: lint

    env:
      YML: 'etc/environment-fenics.yml'

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        py: [ 3.7, 3.8, 3.9, 3.10 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Add packages
        run: |
          sudo apt-get update
          sudo apt-get --yes install texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra cm-super dvipng nodejs

      - name: Install Conda environment with Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ${{ env.YML }}
          extra-specs: python = ${{ matrix.py }}

      - name: Run pytest
        run: |
          pytest --continue-on-collection-errors -v --cov=pySDC --cov-config=.coveragerc --cov-report=html --cov-report=term --durations=0 pySDC/tests -m fenics


  test_petsc:
    runs-on: ubuntu-latest

    needs: lint

    env:
      YML: 'etc/environment-petsc.yml'

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        py: [ 3.7, 3.8, 3.9, 3.10 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Add packages
        run: |
          sudo apt-get update
          sudo apt-get --yes install texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra cm-super dvipng nodejs

      - name: Install Conda environment with Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ${{ env.YML }}
          extra-specs: python = ${{ matrix.py }}

      - name: Run pytest
        run: |
          pytest --continue-on-collection-errors -v --cov=pySDC --cov-config=.coveragerc --cov-report=html --cov-report=term --durations=0 pySDC/tests -m petsc


  test_mpifft:
    runs-on: ubuntu-latest

    needs: lint

    env:
      YML: 'etc/environment-mpi4py-fft.yml'

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        py: [ 3.7, 3.8, 3.9, 3.10 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Add packages
        run: |
          sudo apt-get update
          sudo apt-get --yes install texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra cm-super dvipng nodejs

      - name: Install Conda environment with Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ${{ env.YML }}
          extra-specs: python = ${{ matrix.py }}

      - name: Run pytest
        run: |
          pytest --continue-on-collection-errors -v --cov=pySDC --cov-config=.coveragerc --cov-report=html --cov-report=term --durations=0 pySDC/tests -m mpifft